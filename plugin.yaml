###############################################################################
# Cloudify cloudstack built in types and plugins definitions.
###############################################################################

plugins:
    cloudstack:
        executor: central_deployment_agent
        source: https://github.com/cloudify-cosmo/cloudify-cloudstack-plugin/archive/1.3.zip
        package_name: cloudify-cloudstack-plugin
        package_version: 1.3

node_types:
    cloudify.cloudstack.nodes.VirtualMachine:
        derived_from: cloudify.nodes.Compute
        properties:
            server: {}
            portmaps:
                default: {}
            network:
                default: {}
            use_external_resource:
                default: false
            resource_id:
                default: ''
            management_network_name:
                default: ''
            cloudstack_config:
                default: {}
        interfaces:
            cloudify.interfaces.lifecycle:
                create:
                    implementation: cloudstack.cloudstack_plugin.virtual_machine.create
                    inputs: {}
                start:
                    implementation: cloudstack.cloudstack_plugin.virtual_machine.start
                    inputs: {}
                stop:
                    implementation: cloudstack.cloudstack_plugin.virtual_machine.stop
                    inputs: {}
                delete:
                    implementation: cloudstack.cloudstack_plugin.virtual_machine.delete
                    inputs: {}
            cloudify.interfaces.host:
                get_state:
                    implementation: cloudstack.cloudstack_plugin.virtual_machine.get_state
                    inputs: {}

    cloudify.cloudstack.nodes.WindowsServer:
        derived_from: cloudify.cloudstack.nodes.VirtualMachine
        interfaces:
            cloudify.interfaces.worker_installer:
                install:
                    implementation: agent.windows_agent_installer.tasks.install
                    inputs: {}
                start:
                    implementation: agent.windows_agent_installer.tasks.start
                stop:
                    implementation: agent.windows_agent_installer.tasks.stop
                    inputs: {}
                uninstall:
                    implementation: agent.windows_agent_installer.tasks.uninstall
                    inputs: {}
                restart:
                    implementation: agent.windows_agent_installer.tasks.restart
                    inputs: {}
            cloudify.interfaces.plugin_installer:
                install:
                    implementation: agent.windows_plugin_installer.tasks.install
                    inputs: {}

    cloudify.cloudstack.nodes.Network:
        derived_from: cloudify.nodes.Subnet
        properties:
            network:
                default: {}
            firewall:
                default: {}
            use_external_resource:
                default: false
            resource_id:
                default: ''
            cloudstack_config:
                default: {}
        interfaces:
             cloudify.interfaces.lifecycle:
                  create:
                    implementation: cloudstack.cloudstack_plugin.network.create
                    inputs: {}
                  delete:
                    implementation: cloudstack.cloudstack_plugin.network.delete
                    inputs: {}

    cloudify.cloudstack.nodes.VPC:
        derived_from: cloudify.nodes.Network
        properties:
            network:
                default: {}
            firewall:
                default: {}
            use_external_resource:
                default: false
            resource_id:
                default: ''
            cloudstack_config:
                default: {}
        interfaces:
             cloudify.interfaces.lifecycle:
                create:
                    implementation: cloudstack.cloudstack_plugin.vpc.create
                    inputs: {}
                delete:
                    implementation: cloudstack.cloudstack_plugin.vpc.delete
                    inputs: {}

    cloudify.cloudstack.nodes.SecurityGroup:
        derived_from: cloudify.nodes.SecurityGroup
        properties:
            security_group:
                default: {}
            use_external_resource:
                default: false
            resource_id:
                default: ''
            cloudstack_config:
                default: {}
            rules:
                default: []
            disable_default_egress_rules:
                default: false
        interfaces:
            cloudify.interfaces.lifecycle:
                create:
                    implementation: cloudstack.cloudstack_plugin.security_group.create
                    inputs: {}
                delete:
                    implementation: cloudstack.cloudstack_plugin.security_group.delete
                    inputs: {}

    cloudify.cloudstack.nodes.FloatingIP:
        derived_from: cloudify.nodes.VirtualIP
        properties:
            floatingip:
                default: {}
            use_external_resource:
                default: false
            resource_id:
                default: ''
            cloudstack_config:
                default: {}

    cloudify.cloudstack.nodes.Volume:
            derived_from: cloudify.nodes.Volume
            properties:
                volume: {}
                use_external_resource:
                    default: false
                resource_id:
                    default: ''
                cloudstack_config:
                    default: {}
            interfaces:
                cloudify.interfaces.lifecycle:
                    create: cloudstack.cloudstack_plugin.volume.create
                    delete: cloudstack.cloudstack_plugin.volume.delete

    cloudify.cloudstack.nodes.VpnGateway:
        derived_from: cloudify.nodes.Root
        properties:
            use_external_resource:
                default: false
                description: >
                    A boolean describing whether this resource should be
                    created or rather that it already exists on CloudStack
                    and should be used as-is.

    cloudify.cloudstack.nodes.VpnCustomerGateway:
        derived_from: cloudify.nodes.Root
        properties:
            use_external_resource:
                default: false
                description: >
                    A boolean describing whether this resource should be
                    created or rather that it already exists on CloudStack
                    and should be used as-is.
            resource_id:
                default: ''
            cidr_list:
                default: ''
            ipsec_psk:
                default: ''
            esp_policy:
                default: '3des-md5'
            ike_policy:
                default: '3des-md5'
            ike_lifetime:
                default: 86400
            esp_lifetime:
                default: 3600
            dpd:
                default: false

    cloudify.cloudstack.nodes.VpnConnection:
        derived_from: cloudify.nodes.Root
        properties:
            use_external_resource:
                default: false
                description: >
                    A boolean describing whether this resource should be
                    created or rather that it already exists on CloudStack
                    and should be used as-is.
            resource_id:
                default: ''
            passive:
                default: true
        interfaces:
            cloudify.interfaces.lifecycle:
                create:
                    implementation: cloudstack.cloudstack_plugin.vpn.create_vpn_connection
                    inputs:
                        vpn_gateway_id:
                            default: ''
                        vpn_customer_gateway_id:
                            default: ''
                delete:
                    implementation: cloudstack.cloudstack_plugin.vpn.delete_vpn_connection

    cloudify.cloudstack.nodes.KeyPair:
        derived_from: cloudify.nodes.Root
        properties:
            keypair:
                default: {}
                description: >
                    the keypair object as described by Cloudstack. This
                    parameter can be used to override and pass parameters
                    directly to Nova client.
                    Note that in the case of keypair, the only nested parameter
                    that can be used is "name".
            private_key_path:
                description: >
                    the path (on the machine the plugin is running on) to
                    where the private key should be stored. If
                    use_external_resource is set to "true", the existing
                    private key is expected to be at this path.
            use_external_resource:
                default: false
                description: >
                    a boolean describing whether this resource should be
                    created or rather that it already exists on Openstack
                    and should be used as-is.
            resource_id:
                default: ''
                description: >
                    the name that will be given to the resource on Cloudstack (excluding optional prefix).
                    If not provided, a default name will be given instead.
                    If use_external_resource is set to "true", this exact
                    value (without any prefixes applied) will be looked for
                    as either the name or id of an existing keypair to be used.
            cloudstack_config:
                default: {}
        interfaces:
            cloudify.interfaces.lifecycle:
                create:
                    implementation: cloudstack.cloudstack_plugin.keypair.create
                    inputs: {}
                delete:
                    implementation: cloudstack.cloudstack_plugin.keypair.delete
                    inputs: {}
            cloudify.interfaces.validation:
                creation:
                    implementation: cloudstack.cloudstack_plugin.keypair.creation_validation
                    inputs: {}

relationships:
#     cloudify.cloudstack.port_connected_to_security_group:
#         derived_from: cloudify.relationships.connected_to
#         source_interfaces:
#             cloudify.interfaces.relationship_lifecycle:
#                 - establish: cloudstack.neutron_plugin.port.connect_security_group

#     cloudify.cloudstack.subnet_connected_to_router:
#         derived_from: cloudify.relationships.connected_to
#         target_interfaces:
#             cloudify.interfaces.relationship_lifecycle:
#                 - establish: cloudstack.neutron_plugin.router.connect_subnet
#                 - unlink: cloudstack.neutron_plugin.router.disconnect_subnet

    cloudify.cloudstack.vpn_gateway_connected_to_vpc:
            derived_from: cloudify.relationships.connected_to
            source_interfaces:
                cloudify.interfaces.relationship_lifecycle:
                    establish: cloudstack.cloudstack_plugin.vpn.create_vpn_gateway
                    unlink: cloudstack.cloudstack_plugin.vpn.delete_vpn_gateway

    cloudify.cloudstack.vpn_customer_gateway_connected_to_vpn_gateway:
        derived_from: cloudify.relationships.connected_to
        source_interfaces:
            cloudify.interfaces.relationship_lifecycle:
                establish: cloudstack.cloudstack_plugin.vpn.create_vpn_customer_gateway
                unlink: cloudstack.cloudstack_plugin.vpn.delete_vpn_customer_gateway

    cloudify.cloudstack.volume_connected_to_vm:
            derived_from: cloudify.relationships.connected_to
            source_interfaces:
                cloudify.interfaces.relationship_lifecycle:
                    establish: cloudstack.cloudstack_plugin.virtual_machine.attach_volume
                    unlink: cloudstack.cloudstack_plugin.virtual_machine.detach_volume

    cloudify.cloudstack.virtual_machine_connected_to_floating_ip:
        derived_from: cloudify.relationships.connected_to
        source_interfaces:
            cloudify.interfaces.relationship_lifecycle:
                establish:
                    implementation: cloudstack.cloudstack_plugin.virtual_machine.connect_floating_ip
                    inputs: {}
                unlink:
                    implementation: cloudstack.cloudstack_plugin.virtual_machine.disconnect_floating_ip
                    inputs: {}

    cloudify.cloudstack.floating_ip_connected_to_network:
        derived_from: cloudify.relationships.connected_to
        source_interfaces:
            cloudify.interfaces.relationship_lifecycle:
                establish:
                    implementation: cloudstack.cloudstack_plugin.floatingip.connect_network
                    inputs: {}
                unlink:
                    implementation: cloudstack.cloudstack_plugin.floatingip.disconnect_network
                    inputs: {}

    cloudify.cloudstack.floating_ip_connected_to_vpc:
        derived_from: cloudify.relationships.connected_to
        source_interfaces:
            cloudify.interfaces.relationship_lifecycle:
                establish:
                    implementation: cloudstack.cloudstack_plugin.floatingip.connect_vpc
                    inputs: {}
                unlink:
                    implementation: cloudstack.cloudstack_plugin.floatingip.disconnect_network
                    inputs: {}

    # cloudify.cloudstack.server_connected_to_security_group:
    #     derived_from: cloudify.relationships.connected_to
    #     source_interfaces:
    #         cloudify.interfaces.relationship_lifecycle:
    #             - establish: cloudstack.cloudstack_plugin.server.connect_security_group
    #             - unlink: cloudstack.cloudstack_plugin.server.disconnect_security_group

    cloudify.cloudstack.virtual_machine_connected_to_network:
        derived_from: cloudify.relationships.connected_to
        source_interfaces:
            cloudify.interfaces.relationship_lifecycle:
                establish:
                    implementation: cloudstack.cloudstack_plugin.virtual_machine.connect_network
                    inputs: {}
                unlink:
                    implementation: cloudstack.cloudstack_plugin.virtual_machine.disconnect_network
                    inputs: {}

    cloudify.cloudstack.virtual_machine_connected_to_keypair:
        derived_from: cloudify.relationships.connected_to

#     cloudify.cloudstack.server_connected_to_port:
#         derived_from: cloudify.relationships.connected_to

#     cloudify.cloudstack.floating_ip_connected_to_port:
#         derived_from: cloudify.relationships.connected_to

#     cloudify.cloudstack.security_group_rule_in_security_group:
#         derived_from: cloudify.relationships.contained_in
